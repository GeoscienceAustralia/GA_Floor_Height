[project]
name = "floor-heights"
# Let setuptools-scm pull the version from your Git tags
dynamic = ["version"]

description = "Estimate building first-floor heights from panoramic imagery, LiDAR and ML."
keywords = ["lidar", "geospatial", "machine-learning"]
requires-python = ">=3.12"

authors = [
  { name = "Benjamin Tebbutt", email = "btebbutt@frontiersi.com.au" },
  { name = "Lavender Liu", email = "lliu@frontiersi.com.au" }
]

# ───────────────  runtime dependencies  ───────────────
dependencies = [
  "boto3>=1.38,<2",
  "diskcache>=5.6,<6",
  "fiona>=1.10,<2",
  "folium>=0.19,<1",
  "geoalchemy2>=0.17,<1",
  "geopandas>=1.0,<2",
  "loguru>=0.7,<1",
  "matplotlib>=3.10,<4",
  "pandas>=2.2,<3",
  "polars>=1.29,<2",
  "psycopg2-binary>=2.9,<3",
  "pyarrow>=20,<23",
  "python-dotenv>=1.1,<2",
  "pyyaml>=6,<7",
  "rich>=14,<15",
  "scikit-learn>=1.6,<1.7",
  "scipy>=1.15,<2",
  "shapely>=2.1,<3",
  "sqlalchemy>=2.0,<3",
  "tabulate>=0.9,<1",
  "tqdm>=4.67,<5"
]

# ───────────────  optional extras  ───────────────
[project.optional-dependencies]
# Native PDAL is supplied by Conda; just bring in the Python bindings
lidar = ["pdal"]

lint = ["ruff>=0.4", "mypy>=1.15", "pre-commit>=4.2"]
test = ["pytest>=8.3", "pytest-cov>=6.1", "hypothesis>=6.131"]
typing = [
  "pandas-stubs>=2.2",
  "types-boto3>=1.38",
  "types-tabulate>=0.9",
  "types-tqdm>=4.67",
  "types-pyyaml>=6.0",
  "types-pytz>=2025"
]

# Meta-bundle for day-to-day dev work
dev = [
  "floor-heights[lint,test,typing]",
  "ipykernel>=6.29"          # Jupyter only in dev
]

[project.scripts]
floor-heights = "floor_heights.main:main"

# ───────────────  build & packaging  ───────────────
[build-system]
requires = [
  "setuptools>=69",
  "setuptools_scm[toml]>=8.0"   # pulls Git tag into version
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = { "" = "src" }
package-data = { "floor_heights" = ["py.typed"] }
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

# ───────────────  setuptools_scm for Git-based versioning  ───────────────
[tool.setuptools_scm]
write_to = "src/floor_heights/_version.py"

# ───────────────  testing  ───────────────
[tool.pytest.ini_options]
pythonpath = [".", "src"]

# ───────────────  Ruff  ───────────────
[tool.ruff]
target-version = "py312"
exclude = [
  ".venv", ".git", "__pycache__", ".ruff_cache",
  "build", "dist", "migrations", "data", "*.egg-info"
]
include = ["*.py", "*.pyi", "pyproject.toml"]

[tool.ruff.lint]
select = [
  "E", "W", "F", "I", "N", "UP", "B",
  "C4", "SIM", "PTH", "RUF", "PERF"
]
ignore = ["E501", "B008"]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["F401", "F811"]
"__init__.py" = ["F401", "E402"]

[tool.ruff.format]
line-length = 120
indent-style = "space"
quote-style = "double"
docstring-code-format = true
skip-magic-trailing-comma = false

# ───────────────  mypy  ───────────────
[tool.mypy]
python_version = "3.12"
strict = true
namespace_packages = true
plugins = ["sqlalchemy.ext.mypy.plugin"]
explicit_package_bases = true