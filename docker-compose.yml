version: "3.8"

services:
  app:
    build:
      context: .
      args:
        HOST_UID: ${UID:-1000}
        HOST_GID: ${GID:-1000}
    image: floor-heights:dev
    depends_on:
      db:
        condition: service_healthy

    volumes:
      - ./src:/app/src
      - ./config:/app/config
      - ./data:/app/data:ro
      - ./output:/app/output
      - ./regression:/app/regression:ro
      - ./uv.lock:/app/uv.lock:ro

    environment:
      DB_CONNECTION_STRING: ${DB_CONNECTION_STRING:-postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-floor_heights}}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
      PYTHONUNBUFFERED: "1"
      PYTHONPATH: /app
      PROJ_LIB: /opt/conda/share/proj
      GDAL_DATA: /opt/conda/share/gdal
      LD_LIBRARY_PATH: /opt/conda/lib

    command: python -m floor_heights.main
    
  db:
    image: postgis/postgis:15-3.4
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-floor_heights}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: